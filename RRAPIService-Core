pipeline {
    agent {
        label 'DEV-1'
    }
    environment {

        PROJECT_NAME = 'RRAPIService-Core'
        PROJECT_SOLUTION_NAME= 'ResumeApiServiceCore.sln'
        
    }
    stages {
        stage('Clean Ws') {
	   steps {
	      cleanWs deleteDirs: true, disableDeferredWipeout: true, notFailBuild: true
	     
	     }
	     }
   
        stage('Cloning the repo from the github') {
            steps {

                checkout([
                     $class: 'GitSCM', 
			branches: [[name: "${params.Code_Branch}"]], 
                        doGenerateSubmoduleConfigurations: false, 
                        extensions: [], 
                        submoduleCfg: [], 
                        userRemoteConfigs: [
                            [
                                credentialsId: '5229a6f9-8c35-40b6-aa3d-609c769a31c6', 
                                url: 'https://github.com/RigilCorp/RRAPIService-Core.git'
                            ]
                        ]
                ])
            }
        } 
	stage('Restore packages') {

          steps {
	    bat 'powershell Remove-Item -Path "C:\\RRAPIService-Core-Publish\\*" -Recurse '
            bat  "dotnet restore  ${PROJECT_SOLUTION_NAME}"
            

            }
        }
       
        stage('Publish Build') {

          steps {
                 bat "dotnet publish -c Release -r win-x64 --self-contained false --output c:\\RRAPIService-Core-Publish ${PROJECT_SOLUTION_NAME}"

             }
       
        }
	
        stage('Remove appseting/config') {

                steps {
	
                    bat "del C:\\RRAPIService-Core-Publish\\web.config"
                    bat "del C:\\RRAPIService-Core-Publish\\appsettings.json"
                    bat "del C:\\RRAPIService-Core-Publish\\appsettings.Development.json"
                    }
        }     
        stage('Archiving the Build Artifact') {

                steps {
		    
                    
                    dir('C:\\archive\\RRAPIService-Core\\')
                    {
                       bat "C:\\7-Zip\\7z.exe a  ${PROJECT_NAME}-${env.BUILD_NUMBER}.zip  C:\\RRAPIService-Core-Publish\\*"
                    }

                }
        }

        stage('S3 publisher') {
                steps{
                             
			      withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-s3-cred', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {

                               bat "aws s3 ls"
                               bat "aws s3 cp C:\\archive\\RRAPIService-Core\\${PROJECT_NAME}-${env.BUILD_NUMBER}.zip  s3://rigil-aws-devops-staging-s3-bucket/RRAPIService-Core/upload/"
                             }

	         }
	    }
	stage('IIS site stop') {
                
                steps {
		   
		 
                      sshPublisher(publishers: [sshPublisherDesc(
                       configName: 'ec2-18-214-134-69.compute-1.amazonaws.com:41753', 
                       sshCredentials: [encryptedPassphrase: '{AQAAABAAAAAg4c2oYSXWPsWk41d79wcju1qfIOvLRYsFN5in172AzON4Mrc44Y8p1dghzYA7QN+h}', key: '', keyPath: '', username: 'Santosh'],
                       transfers: [sshTransfer(cleanRemote: false,
		       excludes: '', 
                       execCommand: 'cmd /c C:\\Windows\\System32\\inetsrv\\appcmd.exe stop site /site.name:rrservice',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
		       ),
		       sshTransfer(cleanRemote: false,
		       excludes: '', 
                       execCommand: 'cmd /c C:\\Windows\\System32\\inetsrv\\appcmd.exe stop APPPOOL "rrservice"',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
		       )], 
                       usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)])
		       
		       sleep(55)
		       }
		       }
                      
		       
        stage('Deploy to Dev') {
                
                steps {
          
                     sshPublisher(publishers: [sshPublisherDesc(
                       configName: 'ec2-18-214-134-69.compute-1.amazonaws.com:41753', 
                       sshCredentials: [encryptedPassphrase: '{AQAAABAAAAAg4c2oYSXWPsWk41d79wcju1qfIOvLRYsFN5in172AzON4Mrc44Y8p1dghzYA7QN+h}', key: '', keyPath: '', username: 'Santosh'],
                       transfers: [sshTransfer(cleanRemote: false,
                       excludes: '', 
                       execCommand: "aws s3 cp s3://rigil-aws-devops-staging-s3-bucket/RRAPIService-Core/upload/RRAPIService-Core-${BUILD_NUMBER}.zip   C:\\webapps\\jenkins\\RRService\\RRAPIService-Core",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
                       ),
		       sshTransfer(cleanRemote: false,
		       excludes: '', 
                       execCommand: 'cmd /c C:\\Windows\\System32\\inetsrv\\appcmd.exe stop site /site.name:rrservice',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
		       ),
                       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: 'Powershell Compress-Archive -Path C:\\webapps\\RRService\\ResumeApiService -DestinationPath C:\\webapps\\backup-pipeline\\RRService\\RRAPIService-Core\\RRAPIService-Core.zip -F',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
                       ),
                       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: "aws s3 cp C:\\webapps\\backup-pipeline\\RRService\\RRAPIService-Core\\RRAPIService-Core.zip  s3://rigil-aws-devops-staging-s3-bucket/RRAPIService-Core/backup/${env.BUILD_NUMBER}/ ",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
                       ),
                       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: 'cmd /c C:\\webapps\\jenkins\\7-Zip\\7z.exe x  C:\\webapps\\jenkins\\RRService\\RRAPIService-Core\\RRAPIService-Core-${Build_Number}.zip -oC:\\webapps\\RRService\\ResumeApiService -y -r',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
                       ),
                       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: "Powershell copy-item C:\\webapps\\RRService\\RRAPI-Deployment\\* C:\\webapps\\RRService\\ResumeApiService\\   -recurse -Force",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
	               )], 
                       usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)])
                      
                        emailext body: '''$PROJECT_NAME - Build # $BUILD_NUMBER :
                          Build deployed to Dev Env.''', recipientProviders: [buildUser()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!',to: 'manish@zibal.com,bhim@zibal.com,smriti@zibal.com,gaurav@zibal.com,yatharth@zibal.com'
                }
                  
	    }
        stage('IIS site start') {
                
                steps {
          
                     sshPublisher(publishers: [sshPublisherDesc(
                       configName: 'ec2-18-214-134-69.compute-1.amazonaws.com:41753', 
                       sshCredentials: [encryptedPassphrase: '{AQAAABAAAAAg4c2oYSXWPsWk41d79wcju1qfIOvLRYsFN5in172AzON4Mrc44Y8p1dghzYA7QN+h}', key: '', keyPath: '', username: 'Santosh'],
                       transfers: [sshTransfer(cleanRemote: false,
		       excludes: '', 
                       execCommand: 'cmd /c C:\\Windows\\System32\\inetsrv\\appcmd.exe start site /site.name:rrservice',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
		       ),
		       sshTransfer(cleanRemote: false,
		       excludes: '', 
                       execCommand: 'cmd /c C:\\Windows\\System32\\inetsrv\\appcmd.exe start APPPOOL "rrservice"',
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
		       )], 
                       usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)])
		       
		       sleep(15)
		       
		       }
		       }	  
	  
   
      }    
   
    post{  
            always{  
	            cleanWs deleteDirs: true, disableDeferredWipeout: true, notFailBuild: true
                    emailext body: '''$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

                    Check console output at $BUILD_URL to view the results.''', recipientProviders: [buildUser()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!',to: 'santosh@zibal.com,bhim@zibal.com,smriti@zibal.com,gaurav@zibal.com,yatharth@zibal.com'      
	          }
                
            failure{  
                        emailext body: '''$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

                        Check console output at $BUILD_URL to view the results.''', recipientProviders: [buildUser()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!',to: 'santosh@zibal.com,bhim@zibal.com,smriti@zibal.com,gaurav@zibal.com,yatharth@zibal.com'      
	  
                    
                    }
    
   }
    
}
