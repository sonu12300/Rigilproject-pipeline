node("DEV-1") {
    
    environment {

        PROJECT_NAME = 'TAGIT-API'
       
        
       }
   
    stage('Validating Build Number') { // for display purposes
      
        def jenkins = Jenkins.getInstance()
        def jobName = "TAGIT-API-Rollback"
        def job = jenkins.getItem(jobName)
        def BuildNo = "${BUILD_NUMBER}"

        def allbuild = "${job.getBuilds().collect{ it.getNumber()}}"
        if(allbuild.contains(BuildNo)){
            println "We found the build number entered by you in the build history: ${BuildNo}"
          
        } 
        else 
        {
            println "No build number was found "
            
            emailext body: '''$PROJECT_NAME - Build # $BUILD_NUMBER :
               Build is failed due to incorrect build number.''', recipientProviders: [buildUser()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - FAILED!',to: 'manish@zibal.com,bhim@zibal.com,smriti@zibal.com,gaurav@zibal.com,yatharth@zibal.com'
            error("Build failed because of this and that..")
       }
        
        
    }
   
    
    
    stage('Rollback to Dev') {
                
                
                   sshPublisher(publishers: [sshPublisherDesc(
                       configName: 'ec2-18-214-134-69.compute-1.amazonaws.com:41753', 
                       sshCredentials: [encryptedPassphrase: '{AQAAABAAAAAgHH7/Lz3y2vMo0U39zIdDQlx358LKCJF3usv/sTOliMWez3o+/1569lHkV+e8qHaA}', key: '', keyPath: '', username: 'Manish'],
                       transfers: [sshTransfer(cleanRemote: false,
		       excludes: '', 
                       execCommand: "Powershell net stop tagit",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
		       ),
		       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: "aws s3 cp s3://rigil-aws-devops-staging-s3-bucket/TAGIT-API/backup/${BUILD_NUMBER}/ C:\\webapps\\jenkins\\rollback\\TAGIT\\API --recursive",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+', 
                       ),
                       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: "Powershell Expand-Archive -Path C:\\webapps\\jenkins\\rollback\\TAGIT\\API\\TAGIT-API.zip -DestinationPath C:\\webapps\\jenkins\\rollback\\TAGIT\\API\\ -F",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
		       ),
		       sshTransfer(cleanRemote: false, 
                       excludes: '', 
                       execCommand: "Powershell copy-item C:\\webapps\\jenkins\\rollback\\TAGIT\\API\\tagit-0.0.1-SNAPSHOT.jar C:\\webapps\\tagit\\  -recurse -Force",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
		       ),
		       sshTransfer(cleanRemote: false,
		       execCommand: "Powershell net start tagit",
                       execTimeout: 120000, flatten: false, makeEmptyDirs: false,
                       noDefaultExcludes: false, patternSeparator: '[, ]+',
	               )], 
                       usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)])
                      emailext body: '''$PROJECT_NAME - Build # $BUILD_NUMBER :
                        Build deployed to Dev Env.''', recipientProviders: [buildUser()], subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!',to: 'manish@zibal.com,bhim@zibal.com,smriti@zibal.com,gaurav@zibal.com,yatharth@zibal.com'
                    

                  
		  }
                  
		  
        }
    
    
